# default paths for gitolite

# please read comments before editing

# this file is meant to be pulled into a perl program using "do" or "require".

# You do NOT need to know perl to edit the paths; it should be fairly
# self-explanatory

# --------------------------------------

# this is where the repos go.  If you provide a relative path (not starting
# with "/"), it's relative to your $HOME.  You may want to put in something
# like "/bigdisk" or whatever if your $HOME is too small for the repos, for
# example

$REPO_BASE="repositories";

# --------------------------------------

# I see no reason anyone may want to change the gitolite admin directory, but
# feel free to do so.  However, please note that it *must* be an *absolute*
# path (i.e., starting with a "/" character)

# gitolite admin directory, files, etc
$GL_ADMINDIR=$ENV{HOME} . "/.gitolite";

# --------------------------------------

# I see even less reason to change these, since they're all relative to the
# gitolite admin directory above, but hey it's *your* system...

$GL_CONF="$GL_ADMINDIR/conf/gitolite.conf";
$GL_KEYDIR="$GL_ADMINDIR/keydir";
$GL_CONF_COMPILED="$GL_ADMINDIR/conf/gitolite.conf-compiled.pm";

# --------------------------------------
# personal branch prefix; leave it as is (empty) if you don't want to use the
# feature (see the "developer-specific branches" section in the "faq, tips,
# etc" document)
$PERSONAL="";
# uncomment one of these if you do want it.  I recommend this:
# $PERSONAL="refs/personal";
# but if you want something more visible/noisy, use this:
# $PERSONAL="refs/heads/personal";

# --------------------------------------
# per perl rules, this should be the last line in such a file:
1;
